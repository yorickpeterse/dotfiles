snippet eq "Insert an equal assertion"
	t.equal(${1:left}, ${2:right})
snippet aneq "Insert a not-equal assertion"
	t.not_equal(${1:left}, ${2:right})
snippet trait "Define a new trait"
	trait ${1:name} {
		$0
	}
snippet class "Define a new class"
	class ${1:name} {
		$0
	}
snippet impl "Reopens a class"
	impl ${1:name} {
		$0
	}
snippet match "Insert a match expression"
	match ${1:expr} {
	  $0
	}
snippet case "Insert a match case"
	case ${1:pattern} -> ${2:body}
snippet fn "Insert a function"
	fn ${1:name} {
		$0
	}
snippet tests "Inserts a test file"
	import std.test.Tests

	fn pub tests(t: mut Tests) {
		$0
	}
snippet test "Inserts a test"
	t.test('$1', fn (t) {
		$0
	})
